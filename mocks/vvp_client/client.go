// Code generated by MockGen. DO NOT EDIT.
// Source: efrat19.io/vvp-gitops-operator/pkg/vvp_client (interfaces: VvpClient)

// Package mock_vvp_client is a generated GoMock package.
package mock_vvp_client

import (
	reflect "reflect"

	"efrat19.io/vvp-gitops-operator/pkg/vvp_client"
	gomock "github.com/golang/mock/gomock"
)

// MockVvpClient is a mock of VvpClient interface.
type MockVvpClient struct {
	ctrl     *gomock.Controller
	recorder *MockVvpClientMockRecorder
}

// MockVvpClientMockRecorder is the mock recorder for MockVvpClient.
type MockVvpClientMockRecorder struct {
	mock *MockVvpClient
}

// NewMockVvpClient creates a new mock instance.
func NewMockVvpClient(ctrl *gomock.Controller) *MockVvpClient {
	mock := &MockVvpClient{ctrl: ctrl}
	mock.recorder = &MockVvpClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVvpClient) EXPECT() *MockVvpClientMockRecorder {
	return m.recorder
}

// Deployments mocks base method.
func (m *MockVvpClient) Deployments() vvp_client.DeploymentsService {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Deployments")
	ret0, _ := ret[0].(vvp_client.DeploymentsService)
	return ret0
}

// Deployments indicates an expected call of Deployments.
func (mr *MockVvpClientMockRecorder) Deployments() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Deployments", reflect.TypeOf((*MockVvpClient)(nil).Deployments))
}
